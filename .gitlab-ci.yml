image: docker:latest
services:
  - docker:dind
  
variables:
  CLI_NAME: pnapctl
  ARTEFACT_FOLDER: build
  ARTEFACT_DIST_FOLDER: dist

stages:  
#  - test
  - dev-build
  - prod-build
  - dev-portal-deploy
  - prod-portal-deploy

.go-cache:
  variables:
    GOPATH: ${CI_PROJECT_DIR}/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

#test:
#  extends: .go-cache
#  stage: test
#  image: golang:1.13.1
#  before_script:
#    - make --version
#    - apt-get install curl git
#    - go mod download
#    - go get "github.com/golang/mock/mockgen"
#    - go get -u "github.com/jstemmer/go-junit-report"
#  script:
    #-vet-off is required due to failures in using gcc 
#    - go test ./... -v -vet=off 2>&1 | ${GOPATH}/bin/go-junit-report > report.xml
#  artifacts:
#    when: always
#    reports:
#      junit: report.xml


.build:
  extends: .go-cache
  stage: build
#  only:
#    - master
#    - tags
  image: golang:1.13.1
  before_script:
    - apt-get update
    - apt-get install -y curl git zip
    - apt-get install make
  script:
    - make version
    - make build-and-deploy ENVIRONMENT_NAME=$CI_ENVIRONMENT_NAME
  artifacts:
    when: on_success
    paths:
      - ./${ARTEFACT_FOLDER}/$CI_ENVIRONMENT_NAME/${ARTEFACT_DIST_FOLDER}

.portal-deployment:
  image: registry.gitlab.com/phoenixnap/platform-api/apigee-automation:0.0.6
  only:
    - master
  script:
    - /automation/upload_assets.py --folder ./${ARTEFACT_FOLDER}/$CI_ENVIRONMENT_NAME/${ARTEFACT_DIST_FOLDER} --portal "$APIGEE_PORTAL" --org $ORG_NAME --username $APIGEE_USER --password $APIGEE_PASSWORD

portal-dev-deploy:
  extends: .portal-deployment
  stage: dev-portal-deploy
  environment:
    name: dev

portal-prod-deploy:
  extends: .portal-deployment
  stage: prod-portal-deploy
  environment:
    name: prod
  only:
    - master

build-dev:
  extends: .build
  stage: dev-build
  environment:
    name: dev

build-prod:
  extends: .build
  stage: prod-build
  environment:
    name: prod
  only:
    - master
