// Code generated by MockGen. DO NOT EDIT.
// Source: pnapctl/printer/printer.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPrinter is a mock of Printer interface
type MockPrinter struct {
	ctrl     *gomock.Controller
	recorder *MockPrinterMockRecorder
}

// MockPrinterMockRecorder is the mock recorder for MockPrinter
type MockPrinterMockRecorder struct {
	mock *MockPrinter
}

// NewMockPrinter creates a new mock instance
func NewMockPrinter(ctrl *gomock.Controller) *MockPrinter {
	mock := &MockPrinter{ctrl: ctrl}
	mock.recorder = &MockPrinterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockPrinter) EXPECT() *MockPrinterMockRecorder {
	return _m.recorder
}

// PrintOutput mocks base method
func (_m *MockPrinter) PrintOutput(construct interface{}, isEmpty bool) error {
	ret := _m.ctrl.Call(_m, "PrintOutput", construct, isEmpty)
	ret0, _ := ret[0].(error)
	return ret0
}

// PrintOutput indicates an expected call of PrintOutput
func (_mr *MockPrinterMockRecorder) PrintOutput(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "PrintOutput", reflect.TypeOf((*MockPrinter)(nil).PrintOutput), arg0, arg1)
}
